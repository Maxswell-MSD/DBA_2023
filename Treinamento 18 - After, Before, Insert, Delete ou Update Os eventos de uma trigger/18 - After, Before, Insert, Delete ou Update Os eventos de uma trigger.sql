/* TREINAMENTO 18 TRIGGERS PARA BANCO DE DADOS DIFERENTE EM BACKUP LÓGICO DIFERENTE DO FÍSICO*/

/* REALIZANDO BACKUP EM OUTRO BANCO DE DADOS SEM SER EM UMA TABELA COMO FOI FEITO NO TREINAMENTO ANTERIOR*/
/* COMUNICAÇÃO ENTRE BANCOS USANDO TRINGGER*/



CREATE DATABASE LOJA;
USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)

);


INSERT INTO PRODUTO VALUES (NULL,'LIVRO CSS',55.34);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO SQL',65);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO HTML',78.4);
INSERT INTO PRODUTO VALUES (NULL,'LIVRO PYTHON',64);

DELETE FROM PRODUTO WHERE IDPRODUTO =3;


-- /////////////////////////////////////////////////////

-- PODE CRIAR O ENVENDO PARA D (DELETE) I(INSERT) U (UPDATE)

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES
	(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR,'D');


END
$

DELIMITER ;



-- /////////////////////////////////////////////////////


CREATE DATABASE BACKUP;
USE BACKUP;

STATUS;





CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)

);






/* AULA 18 After, Before, Insert, Delete ou Update? Os eventos de uma trigger*/

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;

/*CRIANDO UMA COLUNA PARA INDICAR O EVENDO DA TRIGGER*/
ALTER TABLE BACKUP.BKP_PRODUTO
ADD ENVENTO CHAR(1);


