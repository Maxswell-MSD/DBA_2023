/* <- Esse é um comentário que não é lido pelo banco de dados
# <- Agora no Mysql o único comentário é esse que é o único diferente


/* Processos de modelagem*/

/* Conceitual 01 e Lógica 02 normalmente é feita pelo AD ADM de Dados */

MODELAGEM CONCEITUAL - É ESCRITO EM RASCUNHO, PAPEL A MODELAGEM BÁSICA QUE É NOME DA TABELA E DADOS A SER REGISTRADO.
MODELAGEM LÓGICA - É QUANDO PEGAMOS A MODELAGEM CONCEITUAL E COLOCAMOS NO BRMODELO OU QUALQUER PROGRAMA DE MODELAGEM.

/* Modelagem 03 Física é feita pelo DBA e também pode ser feita pelo AD*/

MODELAGEM FÍSICA - Tudo que é feito nas outras fazes é trasformada em Script de Banco

/* 1 - Parte  Modelagem Básica - ENTIDADE=TABELA NO BRMODELO */

/*Cliente e tipagem com quantidade Depois de criar Abra o BrModelo para criar esse Escopo*/

CLIENTE

NOME - CARACTER(30)
CPF - NUMERICO(11)
EMAIL - CARACTER(30)
TELEFONE - CARACTER(30)
ENDERECO- CARACTER(100)
SEXO- CARACTER(1)

/* Modelagem lógica - Depois de criar a tabela no BRModelo crie os Campos no BrModelo Clicando em Atributos*/

/* INICIANDO A MODELAGEM FÍSICA USANDO O MYSQL UNICODE PROMPT */

MODELAGEM FÍSICA - Tudo que é feito nas outras fazes é trasformada em Script de Banco

/* CRIANDO O BANCO DE DADOS E COLOQUE O NOME DO BANCO QUE DESEJA E FINALIZA SEMPRE COM;*/

CREATE DATABASE PROJETO;

/* CONECTANDO-SE AO BANCO QUE FOI CRIADO*/

USE PROJETO;

/*Tipagem de tabelas de banco de dados*/

/* 
entendendo a lógica tuning de recursos de otimização de processamento das query- Varchar, Int e Char

Para caracteres literais árvore, joão, matemática temos o Char e Varchar;



Para números temos o Int e o float;

Para Fotos e documentos temos o Blob;

Para os textos extenso temos o text;



	*/
	
	/* CRIANDO A TABELA DE CLIENTES*/
	
/*Agora copie e cole no terminal do mysql*/
CREATE TABLE CLIENTE(
NOME VARCHAR(30),
CPF  INT(11),
EMAIL  VARCHAR(30),
TELEFONE  VARCHAR(30),
ENDERECO VARCHAR(100),
SEXO CHAR(1)


);

/*Como Ver As Tabelas Criadas No Banco de Dados*/

Show TABLES;

/*Como conhecer a estrutura de uma tabela como ver os campos ou tipos */

DESC cliente;




/*----------------------------------------------------------------------------------*/

-- AULA 06 INICIANDO CAMPO DE FILTROS DE VALORES NULOS, UPDATE E DELETE DE REGISTROS

SHOW TABLES;
DESCRIBE CLIENTE;
SELECT * FROM CLIENTE; -- VERIFICANDO ANTES AS LISTAS DE DADOS CADASTRADO QUE TENHA VALORES NULOS

-- 01 FILTRANDO VALORES NULOS:

-- USAMOS SEMPRE O (Is NULL) QUE SIGNIFICA É PARA MOSTRAR OS DADOS QUE TEM NULOS
SELECT NOME,SEXO,ENDERECO FROM CLIENTE WHERE EMAIL Is NULL;  

-- PARA TRAZER SÓ OS DADOS QUE NÃO TENHA VALORES NULOS USAMOS O TERMO (Is Not NULL)

SELECT NOME,SEXO,ENDERECO FROM CLIENTE WHERE EMAIL  Is Not Null;

-- 02 DA AULA 06 CRIANDO O UPDATE A ATUALIZAÇÃO DOS DADOS

-- ATUALIZANDO OS DADOS DOS CLIENTES QUE TEM OS DADOS ERRADOS OU NÃO REGISTRADOS COMO VALORES NULOS
-- USAMOS UPDATE NOMETABELA SET COLUNA QUE DESEJA MODIFICAR E COLOQUE OS DADOS, DEPOIS FILTRAMOS WHERE E O NOME DO CLIENTE REFERÊNCIA QUE DESEJA MODIFICAR.

SELECT * FROM CLIENTE WHERE NOME = 'MÁRCIO DINIZ'; -- PRIMEIRO FILTRAMOS O REGISTRO QUE DESEJA REALIZAR O UPDADTE

UPDATE CLIENTE SET EMAIL ='marciodiniz@gmai.com' WHERE NOME = 'MÁRCIO DINIZ';

SELECT * FROM CLIENTE WHERE NOME = 'SAMYA DINIZ';

UPDATE CLIENTE SET EMAIL ='samyadiniz@yahoo.com' WHERE NOME ='Samya Diniz';

-- 03 DA AULA 06 REALIZANDO O COMANDO DELETE USE SEMPRE WHERE PARA NÃO APAGAR TUDO. REALIZE OS FILTROS ANTES

SELECT * FROM CLIENTE;

SELECT COUNT(*) FROM CLIENTE WHERE NOME = 'MAXSWELL SOUSA DINIZ';

DELETE FROM CLIENTE WHERE NOME ='MAXSWELL SOUSA DINIZ';

-- 04 DA AULA 06 DELETANDO NOME ESPECÍFICO QUANDO SE TEM OUTROS NOMES OU DADOS QUE DESEJA

INSERT INTO CLIENTE VALUES('SANDRA',454558787,'sandra@gmail.com','1215-45445','Rua Fernando ','F');
INSERT INTO CLIENTE VALUES('SANDRA',45459832,'sandra@yahoo.com','68944545-454','Fernando linute ','F');

SELECT * FROM CLIENTE; -- VISUALIZANDO TODOS OS CLIANTES

SELECT COUNT(*) FROM CLIENTE WHERE NOME = 'SANDRA'; -- REALIZANDO A CONTAGEM DE REGISTROS COM ESSE NOME

SELECT * FROM CLIENTE WHERE NOME = 'SANDRA'; -- VISUALIZANDO OS REGISTROS COM ESSE NOME

-- DEFINIMOS UMA CONDIÇÃO AND PARA DELETARMOS OS DADOS CORRETOS

DELETE FROM CLIENTE WHERE NOME = 'SANDRA' AND EMAIL = 'sandra@yahoo.com';



-- EXERCÍCIOS DE VALORES NULOS, UPDATE E DELETE DIA 02/02/2023

INSERT INTO CLIENTE (NOME,CPF,EMAIL,TELEFONE,ENDERECO,SEXO) VALUES ('SANDRA',123456,NULL,'123456','Rua Marques ','F');
INSERT INTO CLIENTE (NOME,CPF,EMAIL,TELEFONE,ENDERECO,SEXO) VALUES ('DANILO',78775445,NULL,'1215-45445','Rua paris ','M');
INSERT INTO CLIENTE (NOME,CPF,EMAIL,TELEFONE,ENDERECO,SEXO) VALUES ('HENRIQUE',12545878,NULL,'7812+54545','Avenida Dantas ','M');
INSERT INTO CLIENTE (NOME,CPF,EMAIL,TELEFONE,ENDERECO,SEXO) VALUES ('SANDRA',215875455,'sandrinha@hotmail','6478787','rua leopoldina','F');
INSERT INTO CLIENTE (NOME,CPF,EMAIL,TELEFONE,ENDERECO,SEXO) VALUES ('SANDRA',978456,NULL,'974554','Av Prado ','F');

/* 01 TRAZENDO OS VALORES NULOS*/

SELECT * FROM CLIENTE; -- Mostre todos os registros para verificarmos as colunas que possuem valores nulos

SELECT NOME,EMAIL, COUNT(*) AS 'TOTAL' FROM CLIENTE GROUP BY EMAIL;

SELECT * FROM CLIENTE WHERE EMAIL IS NULL; -- REALIZANDO O FILTRO QUE MOSTRE SÓ OS REGISTROS QUE TEM VALORES NULOS.

SELECT * FROM CLIENTE WHERE EMAIL IS NOT NULL; -- REALIZANDO FILTRO QUE MOSTRE SÓ OS REGISTROS DEVIDAMENTE PREENCHIDO 

/* 02 REALIZE AGORA O UPDATE E O DELETE DE UM REGISTRO*/

SELECT * FROM CLIENTE;

-- REALIZANDO O UPDATE DOS VALORES QUE ESTÃO NULOS EM CAMPO DO EMAIL

SELECT * FROM CLIENTE WHERE EMAIL IS NULL;
SELECT EMAIL, COUNT(*) FROM CLIENTE GROUP BY EMAIL ='NULL';

-- REALIZANDO AGORA OS UPDATE
SELECT COUNT(*) FROM CLIENTE WHERE NOME = 'SANDRA';
SELECT * FROM CLIENTE WHERE NOME ='SANDRA';
UPDATE CLIENTE SET EMAIL = 'sandrabrito@gmail.com.br' WHERE TELEFONE ='123456' ;

-- REALIZANDO O DELETE DO USUÁRIO

SELECT COUNT(*) FROM CLIENTE WHERE NOME = 'SANDRA';
SELECT * FROM CLIENTE WHERE NOME = 'SANDRA';
-- CRIANDO CONDIÇÃO PARA REALIZAR A EXCLUSÃO DO CLIENTE

DELETE FROM CLIENTE WHERE NOME = 'SANDRA' AND CPF ='978456';


-- REALIZANDO NOVAMENTE O MESMO EXERCÍCIO DE CONSULTAS DE VALORES NULOS, UPDATE E DELETE

SELECT * FROM CLIENTE; -- VERIFICANDO AS COLUNAS QUE TENHA OS VALORES NULL
(RESPOSTA COLUNA EMAIL)

SELECT NOME,CPF,EMAIL,ENDERECO, COUNT(*) FROM CLIENTE GROUP BY EMAIL; -- CONTANDO QUANTOS EMAIL SÃO REPETIDOS
(RESPOSTA 6 VALORES NULL)

SELECT * FROM CLIENTE WHERE EMAIL IS NULL; -- VERIFICANDO A COLUNA EMAIL OS REGISTROS QUE TENHA VALORES NULOS
(RESPOSTA 6 REGISTROS)

SELECT * FROM CLIENTE WHERE EMAIL IS NOT NULL; -- VERIFICANDO OS REGISTROS QUE CONSTA O EMAIL DEVIDAMENTE PREENCHIDO
(RESPOSTA 8 REGISTROS COM EMAIL)

/* REALIZANDO AGORA O UPDATE DOS EMAIL QUE NÃO ESTÁ REGISTRADO*/

SELECT * FROM CLIENTE WHERE NOME = 'SANDRA';
(REGISTROS COM O MESMO NOME SÃO TRÊS)


SELECT * FROM CLIENTE WHERE NOME = 'SANDRA' AND CPF = '978456';
UPDATE CLIENTE SET EMAIL = 'sangra2023@gmail.com' WHERE CPF = '978456'; -- REALIZANDO CONDIÇÃO WHERE DO CPF X PARA MODIFICAR SOMENTE O DADO CORRETO

SELECT * FROM CLIENTE WHERE NOME = 'SANDRA' AND CPF = '123456';
UPDATE CLIENTE SET EMAIL = 'sandra2023@gmail.com' WHERE CPF = '123456';

DELETE FROM CLIENTE WHERE  NOME = 'SANDRA' AND CPF ='978456'; -- DELETANDO O CLIENTE USANDO SEMPRE O DELETE FROM CLIENTE COM CONDIÇÃO AND

/*TRAZENDO DETALHES DOS VALORES QUE ESTÃO NULOS*/
SELECT * FROM CLIENTE WHERE EMAIL IS NULL;
| NOME     | CPF      | EMAIL | TELEFONE   | ENDERECO        | SEXO |
+----------+----------+-------+------------+-----------------+------+
| SANDRA   |   123456 | NULL  | 123456     | Rua Marques     | F    |
| DANILO   | 78775445 | NULL  | 1215-45445 | Rua paris       | M    |
| HENRIQUE | 12545878 | NULL  | 7812+54545 | Avenida Dantas  | M    |
| SANDRA   |   978456 | NULL  | 974554     | Av Prado        | F    |
/*REALIZE A CONTAGEM DOS VALORES NULOS*/
SELECT NOME,EMAIL, COUNT(*) AS 'TOTAL' FROM CLIENTE GROUP BY EMAIL;
SELECT * FROM CLIENTE WHERE NOME ='SANDRA';
| NOME   | CPF       | EMAIL             | TELEFONE   | ENDERECO       | SEXO |
+--------+-----------+-------------------+------------+----------------+------+
| SANDRA | 454558787 | sandra@gmail.com  | 1215-45445 | Rua Fernando   | F    |
| SANDRA |    123456 | NULL              | 123456     | Rua Marques    | F    |
| SANDRA | 215875455 | sandrinha@hotmail | 6478787    | rua leopoldina | F    |
| SANDRA |    978456 | NULL              | 974554     | Av Prado       | F
/*REALIZANDO O UPDATE DO USUÁRIO SANDRA DO CPF 123456 */
SELECT * FROM CLIENTE WHERE CPF ='123456' AND  NOME ='SANDRA';
| NOME   | CPF    | EMAIL | TELEFONE | ENDERECO     | SEXO |
+--------+--------+-------+----------+--------------+------+
| SANDRA | 123456 | NULL  | 123456   | Rua Marques  | F
/*REALIZE O UPDATE DESSE USUÁRIO DO CPF 123456*/
UPDATE CLIENTE SET EMAIL ='sandragiovale@gmail.com' WHERE CPF ='123456';
| NOME   | CPF    | EMAIL                   | TELEFONE | ENDERECO     | SEXO |
+--------+--------+-------------------------+----------+--------------+------+
| SANDRA | 123456 | sandragiovale@gmail.com | 123456   | Rua Marques  | F
/*REALIZANDO A EXCLUSÃO DO USUÁRIO SANDRA DO CPF 978456*/
DELETE FROM CLIENTE WHERE CPF ='978456' AND NOME ='SANDRA';

















/* AULA 4 PARTE 1 - COLOCANDO DADOS NAS COLUNAS DE FORMA DIRETA - INSERT INTO TABELA VALUES ('.....');

Algumas pessoas acha essa forma não segura já que não tem as colunas até mesmo para se basear*/

INSERT INTO CLIENTE VALUES('Maxswell Sousa Diniz',988638273,'maxswell@diniz.com','11946742182','Rua Fernando Augsburgo','M');
INSERT INTO CLIENTE VALUES('Carla Diniz',689557897,'Carla@diniz.com','21968573484','Rua Costa Ferreira','F');
INSERT INTO CLIENTE VALUES('Emily Diniz',886947523,'Emily@diniz.com','21985254864','Rua Costa Ferreira','F');

/* Usando essa forma se o usuário não tiver e-mail temos que preencher com Null de nulo se não colocarmos outro registro ocupará o lugar*/

INSERT INTO CLIENTE VALUES('Márcio Diniz',65442896,NULL,'11946745825','Rua Fernando Augsburgo','M');
/*FORMA 01 - INSERINDO OS DADOS DE REGISTROS COM COLUNAS E DADOS*/
/* COLOCANDO DADOS USANDO COLUNAS E REGISTROS - INSERT INTO NOMETABELA (COLUNA1,COLUNA2,COLUNA3,COLUNA4) VALUES('.','.','.','); */

INSERT INTO CLIENTE(NOME,CPF,EMAIL,TELEFONE,ENDERECO,SEXO) VALUES('Graça Diniz',748896523,'Graça@diniz.com','1198578484','Rua Fernando Augsburgo','F');

/* FORMA 02 - OMITINDO DADOS DE EMAIL DE FORMA CORRETA SEM PRECISAR PREENCHER O DADO FALTANTE
	COM ESSE COMANDO OS DADOS NÃO VEM NA ORDEM MAS SIM CONFORME A ORDEM COLOCADA NA COLUNA E REGISTRO*/
/* COLOCANDO DADOS USANDO COLUNAS E REGISTROS - INSERT INTO NOMETABELA (COLUNA1,COLUNA2,COLUNA3,COLUNA4) VALUES('.','.','.','); */

INSERT INTO CLIENTE(NOME,CPF,TELEFONE,ENDERECO,SEXO) VALUES('Samya Diniz',985642535,'1195544231','Rua Fernando Augsburgo','F');

/*FORMA 03 - INSERT COMPACTO - SOMENTE MYSQL OUTRA FORMA DE REGISTRA OMITINDO COLUNA E REGISTRANDO EM SEQUENCIA*/

INSERT INTO CLIENTE VALUES('Bruna',64558958,'Bruna@diniz.com','219556885','Rua dos Invalidos','F'),
('Flávia',455662587,'Flávia@diniz.com','2178855645','Rua Andrada','F'),
('Pierre',366885722,'Pierre@diniz.com','1169583545','RUa do Tatuapé','M');

/* RANGER INT QUANDO NÃO FOR SOMAR ELE PEGA O VALOR MÍNIMO COM ISSO SE COLOCAR 11 DÍGITOS NO CPF É BOM USAR VARCHAR*/

/*###################################################################################################################################*/
/*-------------------------AULA 04 PARTE 02 CONSULTANDO OS REGISTROS DOS DADOS ---------------------------------------------------*/
/* CONHECENDO AS PROJEÇÕES E SELEÇÕES COM O COMANDO SELECT QUE É A PROJEÇÃO DO QUE DESEJA VER PRECISO VER SEMPRE DER O SELECT*/

SELECT NOW() AS DATA_HORA, 'Maxswell' As Técnico; /*Esse comando mostra Data e Hora e o usuário que projetou*/

SELECT ' Maxswell Sousa Diniz'; /* Esse comando mostramos na tela qualquer registro mesmo não registrado no banco*/


/* ALIAS DE CLUNAS*/
/* SELECIONANDO DADOS DA TABELA CLIENTE COM - SELECT NOMECOLUNA,NOMECOLUNA,NOMECOLUNA FROM NOMETABELA*/

SELECT NOME,SEXO,EMAIL FROM CLIENTE;

/*QUANDO FOR SOLICITADO QUE CONSTE O NOME CLIENTE NO LUGAR DE NOME COLOCAMOS O AS*/

SELECT NOME AS CLIENTE,SEXO,EMAIL FROM CLIENTE;

SELECT NOME,SEXO,EMAIL,ENDERECO FROM CLIENTE;

/* COM A PROJEÇÃO VOCÊ PODE APRESENTAR NA ORDEM QUE DESEJAR EXEMPLO*/

SELECT NOME,ENDERECO,EMAIL,SEXO FROM CLIENTE;

/* APENAS PARA FINS ACADEMICOS EM LOCAL DE TRABALHO NÃO USE ESSE COMANDO COM (*)ELE PUXA TODOS OS DADOS*/

SELECT * FROM CLIENTE; /* Se na tela do usuário tiver três campos se esse comando tiver vai trazer muitos dados sem necessidade 
e com isso vai trafegar muitos dados pela rede sem a necessidade*/

/* QUANDO FOR SOLICITADO PARA SABER QUAL DATA E HORA FOI REGISTRADO USAMOS A JUNÇÃO E A PROJEÇÃO PARA MOSTRAR*/

SELECT NOME,SEXO,EMAIL,ENDERECO, NOW() AS DATA_HORA FROM CLIENTE;



/*###################################################################################################################################*/
/*-------------------------AULA 04 PARTE 03 CONHECENDO A SELEÇÃO DE FILTOS ---------------------------------------------------*/
/* CONHECENDO A SELEÇÕES DE FILTROS*/

/* Quando filtramos as colunas faz parte da projeção do select. O filtro filtra em nível de linhas registrados ele aumenta também 
os dados trafegando na rede.É uma query Sql Para seleção usamos o Where exemplo: Endereco vai trazer só os registros da coluna escolhida


*/

/* AULA 04 PARTE 03 - TRAZENDO OS DADOS DE NOME E SEXO EM QUE O RESULTADO FOR F - SELECT NOMECOLUNA,SEXO FROM NOMETABELA WHERE SEXO='F'; */

SELECT NOME, SEXO FROM CLIENTE WHERE SEXO ='F';

/* MOSTRANDO OS DADOS DE REGISTROS FEMENINO MOSTRANDO SÓ AS COLUNAS NOME E ENDERECO SEM FAZER PROJEÇÃO DO SEXO 
O SINAL DE = USAMOS QUE TEM QUE SER EXATAMENTE O MESMO DADO
*/

SELECT NOME,ENDERECO FROM CLIENTE WHERE SEXO ='F';

/* UTILIZANDO O LIKE QUE SUBSTITUI O = OU SEJA O ENDEREÇO SEJA COMO ENDEREÇO ELE TRABALHA COM CARACTER CORINGA QUALQUER COISA EXEMPLO
RIACHUELO- CENTRO - RIO DE JANEIRO - RJ. RESUMINDO COMECE COM QUALQUER COISA MAIS TERMINA COM RJ

SE O NOME FOR EXTENSO COLOCAMOS A PORCENTAGEM E O FINAL DA PALAVRA PARA FILTRARMOS
*/

/* FILTRANDO POR PALAVRA FINAL*/
SELECT NOME, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE '%Ferreira';

/*FILTRANDO POR PALAVRA INICIAL A POSIÇÃO DA PROCENTAGEM MUDA*/
SELECT NOME, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE 'Rua Costa%';

SELECT NOME, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE 'Costa%';

/* 05 - CONTINUAÇÃO DA AULA 3/3 - PERFORMACE COM OPERADORES LÓGICOS*/
/*	FUNÇÃO DE AGREGAÇÃO QUE ESTÁ LIGADA EM OUTROS BANCOS DA MESMA FORMA*/

/* AULA 3/3 - COMANDO COUNT(*), GROUP BY, PERFORMACE COM OPERADORES LÓGICOS*/



/* COUNT(*) ->  CONTANDO OS REGISTROS DE UMA TABELA, COM ISSO VAI TRAZER EM NÚMERO A QUANTIDADE DE REGISTROS COM AGREGAÇÃO*/
/* GROUP BY ->  O AGRUPADOR É RESPONSAVEL POR PEGA OS VALORES DO COUNT(*) E DIVIDIR O TOTAL CONFORME OS REGISTROS EXEMPO EM VEZ DE
USAR SÓ O COUNT(*) ELE VAI PEGAR UM REGITRO DE 6 E VAI SEPARAR SE TIVER DADOS DE F OU M ELE VAI DA O TOTAL DE F E DE M*/

SELECT * FROM CLIENTE;

/* CONTANDO OS REGISTROS DE UMA TABELA USANDO COUNT(*) */
SELECT COUNT(*) FROM CLIENTE;

/*PARA NÃO MOSTRA O COUNT(*) NA PROJEÇÃO SELECT MODIFIQUE O NOME USANDO O PARAMETRO AS*/
SELECT COUNT(*) AS 'MOSTRAR GERISTROS TOTAL' FROM CLIENTE;

/* OPERADOR GROUP BY É RESPONSAVEL POR AGRUPAR O VALOR TOTAL DO COUNT(*) FAZENDO COM QUE SEJA SEPARADO A CONTAGEM CONFORME OS REGISTROS DIFERENTES REGISTRADOS*/

SELECT SEXO,ENDERECO, COUNT(*) AS ' CONTAGEM DE REGISTROS' FROM CLIENTE GROUP BY ENDERECO;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO='F' OR ENDERECO='Rua Fernando Augsburgo';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO='F' AND ENDERECO='Rua Costa Ferreira';


/* 05 - ÚLTIMA PARTE - PERFORMACE EM OPERADORES LÓGICOS*/

/* 1 MILHÃO DE REGISTROS

PARA CONTAR

SELECT COUNT(*) FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;

SELECT CIDADE, COUNT(*) FROM CLIENTE GROUP BY CIDADE;

CONDICAO
SEXO = F
CIDADE = RIO DE JANEIRO

SITUAÇÃO - TRATANDO COM OU / OR
70% MULHERES = SEXO = F 
30% MORA NO RIO DE JANEIRO 

# USANDO FILTROS COM CONDIÇÕES OR PODEMOS FILTRAR PRIMEIRO SEMPRE PELA MAIOR CHANCE DE BUSCA JÁ QUE ELE PRECISA QUE CONSTE DADOS EM
UMA COLUNA OU EM OUTRA PARA TER SUCESSO!

SELECT NOME, SEXO, CIDADE  FROM CLIENTE WHERE SEXO ='F' OR CIDADE ='RIO DE JANEIRO';

SITUAÇÃO - TRATANDO COM E /AND
70% MULHERES = SEXO = F 
30% MORA NO RIO DE JANEIRO 

# SE TRATANDO DE PERFORMACE SABENDO QUE AND PRECISA DE REGISTROS EM DUAS COLUNAS ESCOLHEMOS FILTRA PELA MENOR CHANCE SEMPRE, ASSIM
MELHORAMOS A PERFORMACE DO BANCO DE DADOS DO QUE IR VÁRIAS VEZES POR UM NÚMERO MAIOR. COM FILTRO COM CHANCE MENOR O RESULTADO É MAIS RÁPIDO
DE PROCESSAMENTO DO BANCO DE DADOS.

SELECT NOME, SEXO CIDADE FROM CLIENTE WHERE CIDADE='RIO DE JANEIRO' AND SEXO='F';













